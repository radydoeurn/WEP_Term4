mediaController
        $photo = Medias::store($request);
        return ["success" => true, "data" => $photo, "Message" => " Created image successfully"];
Media
 protected $fillable = ['image'];
    public static function store($request, $id = null){
        // dd($request->file('image'));
        $data = $request->only('image');
        if ($request->hasFile('image')) {

            $file = $request->file('image');
            $extension = $file->getClientOriginalExtension();
            $filename = time() . '.' . $extension;
            $path = $file->storeAs('uploads/images', $filename, 'public');
            $data['image'] = Storage::url($path);
        }
        $data = self::updateOrCreate(['id' => $id], $data);
        return $data;
Route
Route::post('/photos/create', [MediaController::class, 'store']);

Post
  protected $fillable = ['user_id','title', 'body', 'image'];
    public static function list()
    {
        return self::all();
    }

    public static function store($request, $id=null)
    {
        $data = $request->only('user_id','title', 'body', 'image');
        $data = self::updateOrCreate(['id' => $id], $data);
        return $data;
    }

PostController
 public function store(Request $request)
    {
        // Validate the incoming request data
        $user = auth()->user();
        $validatedData = $request->validate([
            'title' => 'required|string|max:255',
        ]);

        // Create the post using the authenticated user's ID
        $post = Post::create([
            'user_id' => $user->id,
            'title' => $validatedData['title'],
            'body' => $request->body,
            'image' => $request->image,
        ]);

        return response()->json([
            "success" => true,
            "message" => "Post created successfully",
            "data" => $post
        ], 201);
    }
Route
Route::prefix('post')->group(function () {
    Route::get('/list', [PostController::class, 'index']);
    Route::post('/create', [PostController::class, 'store'])->middleware('auth:sanctum');
    Route::put('/update/{id}', [PostController::class, 'update'])->name('post.update');
    Route::delete('/delete/{id}', [PostController::class, 'destroy'])->name('post.destroy');
});

